// vim: syntax=c
void trace_plane(bool shadow_mode, vec3 enorm, float eoffs, vec3 ecol0, vec3 ecol1)
{
	// Normalise
	enorm = normalize(enorm);

	//if((dot(enorm, wpos)-eoffs)*dot(enorm,wdir) >= EPSILON) return; // *** ACCEL SKIP

	// Get pos offset
	float nopos = dot(enorm, wpos) - eoffs;

	// Check side
	bool einside = (nopos < 0.0);

	// Get dir offset
	float nodir = dot(enorm, idir);
	//if(nodir*nopos >= 0.0) return; // *** ACCEL SKIP

	// Get time
	float etime = -nopos*nodir;
	if(etime < EPSILON) return; // *** SKIP if casting in wrong direction

	// @@@ TIME SELECT
	if(etime >= ttime) return; // *** TIME SKIP
	ttime = etime;
	if(shadow_mode) return;

	// Calculate point of intersection
	vec3 epoint = wpos + etime*wdir;

	// TODO: genericise this pattern
	float c0 = floor(epoint.x/3.0);
	float c1 = floor(epoint.z/3.0);
	float csel = c0+c1;
	csel -= floor(csel/2.0)*2.0;

	// Calculate colour
	tnorm = (einside ? -enorm : enorm);
	apply_light(epoint);
	tcol = (csel >= 1.0 ? ecol1 : ecol0);
}

